package Shapes.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int Canvas = 0;
  public static final int Circle = 1;
  public static final int Color = 2;
  public static final int ColorReference = 3;
  public static final int Shape = 4;
  public static final int Square = 5;
  public static final int Triangle = 6;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0xde3cbfab0b8a4618L, 0xb55aeb3e233c8231L);
    builder.put(0x4176c6f2585a7c91L, Canvas);
    builder.put(0x4176c6f2585a7c78L, Circle);
    builder.put(0x4176c6f2585b72afL, Color);
    builder.put(0x238dd969292df4c2L, ColorReference);
    builder.put(0x4176c6f2585a7c74L, Shape);
    builder.put(0x4176c6f2585a7c85L, Square);
    builder.put(0x238dd969294614a5L, Triangle);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
